<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAClYTSnNhDpUBXqVBSyPw9sJQprJAs0EQYUSUwqUXAyUnA2UnAxUnAp
        UnAiUnAaUnASUnAHW2sJFhZlLBloLhlpKhHlVBLqVBPoTxVuKRAAAAAAAAAAAAAAAAAAAAD0ikViKxHr
        WRLtYBDmYA5kUkf5+fn5+fn19fU2VFRf+vp8//+M//94//9c//9A//8l//8K//8Aj4+wsLD////////P
        z8+EOQrvZA/tXhDaUREAAAAAAAAAAAAAAAAAAACASijMUA7wZw7ycAt9Pw3Z2dn////////////AwMA0
        jIxt//92//9r//9U//87//8h//8H5eVOXl7///////////////97dXDWZgjybgzvZA6QOAwAAAAAAAAA
        AADXez97MAzvZA7zcwr3fwZeSC/9/f3////////////19fUhJCJN5eVZ//9S//9D//8t//8W//8OYFyH
        hYT///////////////+lpaWzYAP2fAjybwvsXxBeLhUAAAAAAACETSnISg/wZw71dwn5hgW6agGfn5//
        //////////+DgH6pPw00Kx9lTzZlTzZkTzZiTzZgTzZUJQ9vMhTk5OT////////09PRnRx77jgL3gQbz
        cgvuYRB4LAsAAAAAAADvh0NnLRDuYg/ycAv1ewj3gQZuQxeJiYmJiYmFhYV8Ng9zLw4AAAAAAAAAAAAA
        AAAAAAAAAACjXzKcPAtYRzx+eXZ/enZcU0rXcAX2fgf0dgnxaw3VVA8AAAAAAAAAAAAAAACjYDOsQQzu
        Yw/xawzycAvxcQrobArnZwzkXw7ASQ4AAAD/jkSETjBZMy9ZMy9YMywAAAD+jkRhNBrnWhHvZg7xbQzy
        cAvzcQvxbgzwaA3tXxBnLA8AAAAAAAAAAAAAAAD9jURgMRnnVBPsXBHtYBDuYhDuYBDsXBHqVhNfLBQA
        AAC7bDkAAJcAAP8AAP8AAPopG0IAAADOdz6CLgzrVxLtXRHuYBDuYBDtXhDrWRK0QA8AAAAAAAAAAAAA
        AAAAAAAAAADNdjx/KQ7ZRxXaShTbTBPaSxPZRxSRLg4AAAD1ikQkF1EAAP0AAP8AAP8AAP8AANIAAAAA
        AAB4RSa8OxLNRBPORhLORxLNRRPLQBRgLhgAAAAAAAAAAAAAAAAAAAAAAAAAAACkXS9/RyJ/RyJ/RyJ/
        RyJ/RyIAAAAAAADMdDsAAJAAAP8AAP8AAP8AAP8AAP0AAAAAAADwiEORWDKQWDOQWDOQWDOQWDOQWDMA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcNzIAAOkAAP8A
        AP8AAP8AAJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADphEIVDlkAAP4AAP8AANoAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACxZzYAAKAAAP4jFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/jkRcODQAAIoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAADshUIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD//////+A////gH///wB///8AP//+AD///AAf//4AH/4CACAeAwAgHgEAQD8Bg
        MA/AYBAf4EAQP+CACD//gAf/wAAAH8AAAA+AAAAPgAAABwAAAAMAAAADAA/AB4AQQAeAECAPwCAwD+Bg
        MB//8D////B////4f///+P////3//w==
</value>
  </data>
</root>